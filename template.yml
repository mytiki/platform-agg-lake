AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Core Lake

Parameters:
  BucketName:
    Type: String
    Description: Enter the S3 bucket name for the lake.
  VpcId:
    Type: String
    Description: An optional VPC for your lake
    Default: ""

Conditions:
  IsVpc: !Not [ !Equals [ !Ref VpcId, "" ] ]

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: AccessPoint
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:DeleteObject
              - s3:DeleteObjectVersion
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
            Resource:
              - !Sub ${Bucket.Arn}/trail/*
              - !Sub ${Bucket.Arn}/lake/*
            Principal:
              AWS: !GetAtt AccessRole.Arn
            Condition:
              StringEquals:
                s3:DataAccessPointAccount: !Ref AWS::AccountId
          - Effect: Allow
            Action: s3:ListBucket
            Resource: !GetAtt Bucket.Arn
            Principal:
              AWS: !GetAtt AccessRole.Arn
            Condition:
              StringEquals:
                s3:DataAccessPointAccount: !Ref AWS::AccountId
              StringLike:
                s3:prefix:
                  - trail/*
                  - lake/*

  AccessPoint:
    Type: AWS::S3::AccessPoint
    Properties:
      Bucket: !Ref Bucket
      BucketAccountId: !Ref AWS::AccountId
      Name: !Sub ${BucketName}-mytiki
      Policy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt AccessRole.Arn
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
              - s3:DeleteObject
              - s3:DeleteObjectVersion
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
            Resource:
              - !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${BucketName}-mytiki/object/trail/*
              - !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${BucketName}-mytiki/object/lake/*
          - Effect: Allow
            Principal:
              AWS: !GetAtt AccessRole.Arn
            Action: s3:ListBucket
            Resource: !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${BucketName}-mytiki
      VpcConfiguration:
        VpcId: !If [ IsVpc, !Ref VpcId, !Ref AWS::NoValue ]

  AccessRole:
    Type: AWS::IAM::Role
    DependsOn: Bucket
    Properties:
      RoleName: !Sub ${BucketName}-mytiki
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::<TIKI_ACCOUNT>:role/<TIKI_ROLE>
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AccessPoint
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetAccessPoint
                Resource: !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${BucketName}-mytiki

